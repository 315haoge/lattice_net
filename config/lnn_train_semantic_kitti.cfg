train: {
    dataset_name: "semantickitti" //semantickitti, shapenet
    with_viewer: false
    with_debug_output: false
    with_error_checking: false
    batch_size: 1
    lr: 0.5
    base_lr:0.001  // works well for adam with reduceonplateu and with the coarsening which doest the concatenation (if we do concatenation we have to reduce learning rate)
    // base_lr:0.0005
    weight_decay: 1e-4
    nr_epochs_per_half_cycle: 25 //for cyclic learning a half_cycle is the process of going from base_lr to max_lr or viceverse. This is how many epochs it takes to do a half_cycle Leslie paper recomend a value between 2 and 10. Higher values makes the learning more stable as it has more time to warm-up before going into really high learning rates. FOR ONE CYCLE LR THIS SCHOULD BE ALMOST THRE SAME AS THE NR OF EPOCHS WE WANT TO TRAIN FOR (a bit less) as this will correspond to the whole epochs of the cycle and not the half of it
    exponential_gamma: 0.94

    // eval_every_x_iters: 200  //-2 for never evaluate, -1 for evaluate after every epoch of training, and any other positive number for evaluating after each x iteration

    save_checkpoint: true
    checkpoint_path: "/home/local/staff/rosu/data/semantic_kitti/saved_models/final_7_amsgrad_iou"
}

model: {
    positions_mode: "xyz"
    values_mode: "none"
    pointnet_start_nr_channels: 64
    nr_downsamples: 3
    nr_blocks_down_stage: [6,6,8]
    nr_blocks_bottleneck: 8
    nr_blocks_up_stage: [2,2,2]
    nr_levels_down_with_normal_resnet: 3
    nr_levels_up_with_normal_resnet: 3
    compression_factor: 1.0
    dropout_last_layer: 0.0
}


core: {
    loguru_verbosity: 3
    hidpi: true
    debug_with_profiler: true //makes the profiler print when it starts and stops time
}

lattice_gpu: {
    // hash_table_capacity: 9000000
    // hash_table_capacity: 900000
    // hash_table_capacity: 80000
    // hash_table_capacity: 30000 //good for dog which splats around 20k
    // hash_table_capacity: 40000 //good for color_1
    // hash_table_capacity: 3000 //good for lena which splats around 2k
    hash_table_capacity: 80000 //good for smenaitc kitti which splat around 10k with sigma of 1
    // hash_table_capacity: 4000 //good for shapenet which splat at around 1k for sigma 0.03 
    nr_sigmas: 1

    sigma_0: "1.0 3" //sigma of X affecting Y dimensions of the positions vector
    // sigma_0: "0.5 3" //sigma of X affecting Y dimensions of the positions vector # good for semantickitti
    // sigma_0: "0.04 3" //sigma of X affecting Y dimensions of the positions vector # good for shapenetpartseg
    // sigma_1: "1 1"
    // sigma_1: "0.2 1"
}

loader_semantic_kitti: {
    // dataset_path: "/media/rosu/Data/data/semantic_kitti"
    dataset_path: "/home/local/staff/rosu/data/semantic_kitti"
    autostart: false
    mode: "train" // train, test, val
    sequence: "all" //between 00 and 10 without 08, also can be "all" which means it will run through all sequences shuffled or not
    nr_clouds_to_skip: 0
    nr_clouds_to_read: -1
    //nr_clouds_to_read: 100
    cap_distance: 60
    shuffle_points: true
    do_pose: false
    normalize: false // normalize the point cloud between [-1 and 1] TAKES PRECEDENCE OVER THE POSE TRANSFORMATION
    shuffle: true
    do_overfit: false //return only one of the samples the whole time, concretely the first sample in the dataset
    //do_overfit: true //return only one of the samples the whole time, concretely the first sample in the dataset

    label_mngr: {
        labels_file: "/home/local/staff/rosu/data/semantic_kitti/colorscheme_and_labels/labels.txt"
        color_scheme_file: "/home/local/staff/rosu/data/semantic_kitti/colorscheme_and_labels/color_scheme.txt"
        frequency_file: "/home/local/staff/rosu/data/semantic_kitti/colorscheme_and_labels/frequency.txt"
        unlabeled_idx: 0
    }

    transformer: {
        random_translation_xyz_magnitude: 20.0
        rotation_y_max_angle: 0.0
        random_stretch_xyz_magnitude: 0.0
        adaptive_subsampling_falloff_start: 0.0
        adaptive_subsampling_falloff_end: 0.0
        random_subsample_percentage: 0.0 //randomly removed x percent of the pointcloud
        random_mirror_x: true
        random_mirror_z: true
        random_rotation_90_degrees_y: false
    }
}

visualization: {
    show_gui: true

    subsample_factor: 2
    // tf_worldGL_worldROS_angle: -1.57079632679
    // tf_worldGL_worldROS_axis: "x"
    enable_culling: true
    enable_ssao: false
    ao_downsample: 1
    // kernel_radius: 2.5
    kernel_radius: 5.0
    ao_power: 3
    ao_blur_sigma_spacial: 2.0
    ao_blur_sigma_depth: 0.00001
    shading_factor: 1.0
    light_factor: 1.0

    camera_near: 0.5
    camera_far: 5000

    enable_edl_lighting: false
    edl_strength: 8.0

    enable_surfel_splatting:false
}